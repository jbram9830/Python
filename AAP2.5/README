Ansible Automation Platform (AAP) 2.5 with load balancer (haproxy)

Deploying **Red Hat Ansible Automation Platform (AAP) 2.5** in a **load-balanced** and **high availability (HA)** setup on **RHEL 9** involves several components:

- **Controller** (formerly Ansible Tower)
- **Automation Hub** (optional but common)
- **PostgreSQL database** (external for HA)
- **Load balancer** (e.g., HAProxy)
- Shared storage (e.g., NFS) is recommended for HA scenarios

##  Prerequisites

1. RHEL 9 machines:
   - `controller1`, `controller2`, etc.
   - Load balancer (e.g., `haproxy` server)
   - Optional external DB node
2. AAP 2.5 Installer bundle (from Red Hat Customer Portal)
3. Inventory file for the AAP installer
4. Proper DNS / hosts configuration

---

##  Directory Structure

```bash
aap-install/
â”œâ”€â”€ ansible.cfg
â”œâ”€â”€ install.yml
â”œâ”€â”€ inventory
â”‚   â””â”€â”€ hosts
â”œâ”€â”€ group_vars/
â”‚   â”œâ”€â”€ all.yml
â”‚   â”œâ”€â”€ controllers.yml
â”œâ”€â”€ roles/
â”‚   â””â”€â”€ (optional roles for NFS, PostgreSQL, HAProxy)
```

---

##  inventory/hosts (AAP Installer Inventory)

```ini
[automationcontroller]
controller1 ansible_host=192.168.1.10
controller2 ansible_host=192.168.1.11

[all:vars]
admin_password='YOUR_ADMIN_PASSWORD'
pg_host='192.168.1.20'
pg_port='5432'
pg_database='awx'
pg_username='awx'
pg_password='YOUR_DB_PASSWORD'
registry_url='registry.redhat.io'
registry_username='YOUR_REDHAT_USERNAME'
registry_password='YOUR_REDHAT_PASSWORD'
loadbalancer_hostname='aap.example.com'
```

---

##  install.yml (Main Playbook)

```yaml
- name: Setup AAP 2.5 HA Cluster
  hosts: automationcontroller
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Ensure required packages are installed
      dnf:
        name: ['podman', 'python3-pip']
        state: present

    - name: Copy installer bundle to controller
      unarchive:
        src: /path/to/ansible-automation-platform-setup-bundle-2.5-<arch>.tar.gz
        dest: /opt
        remote_src: no

    - name: Copy inventory file
      copy:
        src: inventory/hosts
        dest: /opt/ansible-automation-platform-setup-bundle-2.5/inventory

    - name: Run AAP installer
      command: >
        ./setup.sh
      args:
        chdir: /opt/ansible-automation-platform-setup-bundle-2.5
```

---

## ðŸ’¡ Optional: HAProxy Setup Playbook

```yaml
- name: Install and configure HAProxy as load balancer
  hosts: haproxy
  become: true
  tasks:
    - name: Install haproxy
      dnf:
        name: haproxy
        state: present

    - name: Configure haproxy
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      notify: Restart HAProxy

  handlers:
    - name: Restart HAProxy
      systemd:
        name: haproxy
        state: restarted
```

### `templates/haproxy.cfg.j2` Example

```cfg
frontend aap_frontend
    bind *:80
    default_backend aap_backend

backend aap_backend
    balance roundrobin
    server controller1 192.168.1.10:80 check
    server controller2 192.168.1.11:80 check
```

---

##  Deployment Steps

1. Prepare RHEL 9 VMs and networking
2. Configure external PostgreSQL if used
3. Update inventory with host IPs and passwords
4. Place the AAP 2.5 bundle tarball in `/path/to/...`
5. Run the playbook:

```bash
ansible-playbook install.yml -i inventory/hosts
```

---

##  Validation

- Access AAP via: `http://aap.example.com`
- Login with the admin credentials set in inventory
- Check cluster health in the Controller UI
